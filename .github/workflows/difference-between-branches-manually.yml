name: Get manually difference between branches.

on:
  workflow_dispatch:
    inputs:
      required_branch:
        description: '(ATTENTION PLEASE, branch on which the workflow is started is compared with the required branch.)Define the REQUIRED BRANCH.'
        required: true
      source_branch:
        description: 'Define the source branch to get the missing files.(Default value: branch on which the workflow is started.)'
        default: '${FLOW_STARTED_ON_BRANCH}'
        required: false

env:
  FLOW_STARTED_ON_BRANCH: ${GITHUB_REF##*/}
  OUT_FOLDER_NAME: ${{ github.event.inputs.required_branch }}__VS__${GITHUB_REF##*/}
  ABSOLUTE_PATH: ${GITHUB_WORKSPACE}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: "Checkout source code"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "Get diff file between branches"
        run: |
          git diff remotes/origin/${{ github.event.inputs.required_branch }} --name-only > diffFile.txt

      - name: "Get Missing Files"
        run: |
          chmod +x ./diff_skript/script_for_getting_missing_files.sh
          sh ./diff_skript/script_for_getting_missing_files.sh

      - name: "Copy source Files"
        run: |
           rsync -a ${{env.ABSOLUTE_PATH}}/ --files-from=missing_files.txt dataForConverting
           git checkout remotes/origin/${{ github.event.inputs.required_branch }}
           rsync -a ${{env.ABSOLUTE_PATH}}/ --files-from=diffFile.txt dataForConverting

      - name: "Install Salesforce CLI"
        run: |
            wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
            mkdir ~/sfdx
            tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
            export PATH=~/sfdx/bin:$PATH

      - name: "Convert to Metadata API format"
        run: |
          PATH=~/sfdx/bin:$PATH
          sfdx force:source:convert -p ${{env.ABSOLUTE_PATH}}/dataForConverting -d out/${{env.OUT_FOLDER_NAME}}/unpackaged

      - name: "Get ZIP file"
        run: |
          cd out/${{env.OUT_FOLDER_NAME}}
          zip -r ${{env.OUT_FOLDER_NAME}} unpackaged
          rsync -a ${{env.ABSOLUTE_PATH}}/out/${{env.OUT_FOLDER_NAME}}/${{env.OUT_FOLDER_NAME}}.zip  ${{env.ABSOLUTE_PATH}}/out/
          rm -r ${{env.ABSOLUTE_PATH}}/out/${{env.OUT_FOLDER_NAME}}/${{env.OUT_FOLDER_NAME}}.zip

      - name: "Push converted data"
        run: |
          git config --global user.email "${{ secrets.USER_EMAIL}}"
          git config --global user.name "${{ secrets.USER_NAME}}"
          git add ${{env.ABSOLUTE_PATH}}/out
          git commit -m "`date`"
          git push origin HEAD:${{ github.event.inputs.required_branch }}
